Next release:
  * Add configure script + an INSTALL file
  * Test the sendmail delivery method
  * Add tests db dumps
  * Avoid snapshotting snapshots (DONE)
  * Don't snapshot a device if a snapshot is already present (DONE)
  * Protect against multiple safekeep instance running at once (DONE)
  * Do not include fifos and sockets by default (DONE)
  * Backup fails due to this:
DBG: Do server main loop
INFO: ------------------------------------------------------------------
INFO: Server backup starting for client ajax
dbg: Do client main loop
dbg: Server versions:  1.2, 1.4.0
dbg: Do client_side_script: step PRE-SETUP
dbg: Do setup of ajax.lattica.com
dbg: Doing DB dumps
dbg: Run [ 'pg_dumpall'  '-U'  'postgres' >  '/var/lib/pgsql/backups/all_dbs']
ERR: Server backup for client ajax: FAILED
Traceback (most recent call last):
  File "/usr/bin/safekeep", line 1294, in do_server
    bdir = do_server_getanswer(cout)
  File "/usr/bin/safekeep", line 1085, in do_server_getanswer
    raise Exception('client died unexpectedly')
Exception: client died unexpectedly


Feedback from users:
  * Ã˜yvind Skaar <os@opoint.no>: FreeBSD have snapshot capabilities
    - http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/snapshots.html
    - http://www.freebsd.org/cgi/man.cgi?query=snapshot&sektion=0&manpath=FreeBSD+6.2-RELEASE&apropos=1&format=html
  * Dag Wieers <dag@wieers.com>: disaster recovery
    http://dag.wieers.com/blog/content/call-for-participation-on-mksysb

Future (post 1.0):
  * Modify the test to not rely on Lattica's servers
  * Decide how big the snapshot size should be automagically (DONE)
  * Fully automatic shapshotting mode (DONE)
  * Configuration inheritance
  * Transactional ops on server side, and automagic recovery from errors (Partially DONE)
  * Windows support for the client
  * Write SE Linux rules to limit access rights (akin to the httpd ones)
  * Run the server in a chroot-jail
  * Compare mirroring with a straight rsync(1)

Future (post 1.4.0):
  * Server-side scripting (DONE)
  * In-line scripts
  * Automatic compression of DB dumps
  * Preprocessing of configuration prior to client processing
  * Multi-threading and concurrent backups
